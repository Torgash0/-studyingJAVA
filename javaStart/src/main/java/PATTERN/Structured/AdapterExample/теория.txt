суть паттерна в обертке , он позваляет один обьект запихнуть в какой то метод, который ожидает дургой обьект

Адаптер — это структурный паттерн проектирования, который позволяет объектам с несовместимыми интерфейсами работать вместе.
Адаптер выступает прослойкой между двумя объектами, превращая вызовы одного в вызовы понятные другому.

Применимость: Паттерн можно часто встретить в Java-коде, особенно там, где требуется конвертация разных типов данных или
совместная работа классов с разными интерфейсами.
Примеры Адаптеров в стандартных библиотеках Java:
java.util.Arrays#asList()
java.util.Collections#list()
java.util.Collections#enumeration()
java.io.InputStreamReader(InputStream) (возвращает объект Reader)
java.io.OutputStreamWriter(OutputStream) (возвращает объект Writer)
javax.xml.bind.annotation.adapters.XmlAdapter#marshal() и #unmarshal()

Признаки применения паттерна: Адаптер получает конвертируемый объект в конструкторе или через параметры своих методов.
Методы Адаптера обычно совместимы с интерфейсом одного объекта. Они делегируют вызовы вложенному объекту, превратив перед этим параметры вызова в формат, поддерживаемый вложенным объектом.



