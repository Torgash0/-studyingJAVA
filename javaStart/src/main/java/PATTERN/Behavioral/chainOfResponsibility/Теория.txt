суть паттерна

Цепочка обязанностей — это поведенческий паттерн, позволяющий передавать запрос по цепочке потенциальных обработчиков,
пока один из них не обработает запрос.
Избавляет от жёсткой привязки отправителя запроса к его получателю, позволяя выстраивать цепь из различных обработчиков динамически.

Применимость: Паттерн встречается в Java не так уж часто, так как для его применения нужна цепь объектов, например, связанный список.
Область применения цепочки обязанностей — всевозможные обработчики событий, последовательные проверки доступа и прочее.
Примеры Цепочки обязанностей в стандартных библиотеках Java:
java.util.logging.Logger#log()
javax.servlet.Filter#doFilter()
Признаки применения паттерна: Цепочку обязанностей можно определить по спискам обработчиков или проверок, через которые
пропускаются запросы. Особенно если порядок следования обработчиков важен